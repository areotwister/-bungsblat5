# input: 8 -2097152 2097151  2097151 -2097152  2097150 2097151  2097151 2097150  -2097152 -2097151  -2097151 -2097152  2097151 2097151  -2097152 -2097152
# output: 1 0 1 0 1 0 1 1
# Variablen speichern
INT 2 # Anzahl Tests
SUBI SP 1
STOREIN SP ACC 1
SUBI SP 2
INT 2
STOREIN SP ACC 2 # Zahl 1
INT 2
STOREIN SP ACC 1 # Zahl 2
INT 3
# num1 <= num2 checken
LOADIN SP IN1 2 # num1
LOADIN SP IN2 1 # num2
MOVE IN1 ACC
OPLUS ACC IN2
JUMP>= 4 # Durchlassen wenn Vorzeichen unterschiedlich
MOVE IN1 ACC
JUMP< 7 # Sprung wird gemacht, wenn num1 negativ ist. Folglich ist das Ergebnis true, da num2 dann positiv sein muss, da wir wegen dem Check davor wissen, dass die Vorzeichen unterschiedlich sein müssen
JUMP 4 # Sprung wird gemacht, wenn num1 positiv ist. Folglich ist das Ergebnis false, da num2 dann negativ sein muss, da wir wegen dem Check davor wissen, dass die Vorzeichen unterschiedlich sein müssen
SUB IN1 IN2 # Falls Vorzeichen gleich sind, einfach Check wie üblich durchführen, da nur ein Overflow auftreten kann, wenn die Vorzeichen beider Zahlen unterschiedlich sind
MOVE IN1 ACC
JUMP<= 3 # Ergebnis ist true gdw. num1 - num2 <= 0 gdw. num1 <= num2
LOADI ACC 0 # Ergebnis false
JUMP 2
LOADI ACC 1 # Ergebnis true
STOREIN SP ACC 2
ADDI SP 1
# Eregbnis ausgeben
LOADIN SP ACC 1 
INT 0
ADDI SP 1
# Schleifenzähler runterzählen
LOADIN SP ACC 1
SUBI ACC 1
STOREIN SP ACC 1
JUMP!= -29
ADDI SP 1
JUMP 0
